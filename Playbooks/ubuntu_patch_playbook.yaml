- hosts: all
  ignore_unreachable: true
  become: true
  tasks:
    
    - name: This executes, fails, and the failure is ignored
      ansible.builtin.command: /bin/true

    - name: test for available disk space
      assert:
        that: 
           - not {{ item.mount == '/' and ( item.size_available < item.size_total - ( item.size_total|float * 0.8 ) ) }}
           - not {{ item.mount == '/var' and ( item.size_available < item.size_total - ( item.size_total|float * 0.8 ) ) }}
      with_items: ansible_mounts
      ignore_errors: yes
      register: disk_free
   
    - name: test for availale disk space2 
      assert:
        that:
           - {{ item.mount == / and (item.size_available >= 21474836480) }}
      with_items: ansible_mounts 
      ignore_errors: yes
      register: disk_free 

    - name: Stop multiple services
      service:
        name: "{{ item }}"
        state: stopped
      with_items:
         - apache2
         - nginx
         - mysql

    - name: List available updates
      command: apt list --upgradable 
      register: apt_list_output_before
   
    - name: List security Updates Only 
      command: sudo unattended-upgrade --dry-run -d
      register: apt-security-updates

    - name: Update all
      apt:
      update_cache: yes
      upgrade: yes
      cache_valid_time: 3500
      register: update_result
      failed_when: update_result.rc not in [0, 2]
      ignore_errors: yes

    - name: Perform Security Updates
      command: sudo unattended-upgrade -d
      register: sec_patch_result
      failed_when: sec_patch_result.rc not in [0, 2]
      ignore_errors: yes
      
    # Fix OS release version before patching???
    
    - name: In case of playbook failure
      fail: 
        msg: "{{ playbook_name }} failed because of {{update_result}}. Please review the logs, then attempt patching.
                 The command {{ update_result.cmd/sec_patch_result.cmd }} failed with return code {{ sec_patch_result.rc/update_result.rc }}"
      when: update_result.failed/sec_patch_result.failed

<<<<<<< HEAD
    # Add more error handiling in case of patch failure
=======
>>>>>>> 4041f3ea743ab2beb6e8e9cc3043b4a37a82128a
    - name: Confirm patch
      debug: 
        msg:"Patch completed succefully"

    - name: check if reboot is needed
      stat:
         path: /var/run/reboot-required
      register: reboot_required_file
  

    - name: Reboot if required
      reboot:
      when: reboot_required_file.stat.exists == true
      reboot_timeout: 300
    
    - name: check if all the systems responding to ssh
      local_action:
        module: wait_for
          host={{ (ansible_ssh_host|default(ansible_host))|default(inventory_hostname) }}
          port=22
          search_regex=OpenSSH
          delay=15
          timeout=300
          state=started

    - name: List available updates after reboot
      command: apt list --upgradable
      register: apt_list_output_after
<<<<<<< HEAD


    - name: Display hostname and IP address
      debug:
        var:
          - ansible_hostname
          - ansible_default_ipv4.address
      register: host_info


   # Clean yum/apt cache after update

    # - name: Generate and send report
    #   shell: |
    #     echo "Report for Ubuntu VM patching:" > Ubuntu_report.txt
    #     echo "Updates listed before executing patch playbook: {{ apt_list_output_before }}" >> Ubuntu_report.txt
    #     echo "Updates installed from local repo: {{ apt_list_output_after }}" >> Ubuntu_report.txt
    #     mail -s "Ubuntu VM patching report" yboukari@deloitte.fr < report.txt
=======
   
   
    - name: Clean the cache
     apt:
       clean: yes
>>>>>>> 4041f3ea743ab2beb6e8e9cc3043b4a37a82128a

    
    # Add option for CSV file generator
<<<<<<< HEAD
    - name: Generate cvs reort file
      csv:
        path: "/host_info.csv"
        delimiter: ","
        header_row: true
        fields:
          - "Hostname"
          - "IP Address"
          - "Available Updates"
          - "Security Updates"
        lines:
          - "{{ ansible_hostname }},{{ ansible_default_ipv4.address }},{{ apt_list_output_before.stdout_lines|join('\n') }},{{ apt_security_updates.stdout_lines|join('\n') }}"
      with_items: "{{ host_info.results }}"
      
     
=======
    - name: Generate cvs report file
>>>>>>> 4041f3ea743ab2beb6e8e9cc3043b4a37a82128a

    # Send notification/email with patch report
    - name: Notify me with patch report


     

