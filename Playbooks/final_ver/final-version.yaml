---
- hosts: all
  gather_facts: true
  ignore_unreachable: true
  vars:
    usage_limit: 0.4
    
    #email settings
    email_subject: Patching Report
    receiver: yboukari@deloitte.fr

    #random settings
    csv_path: /root/ansible/reports
    csv_filename: report_{{ lookup('pipe', 'date +%Y%m%d-%H%M%S') }}.csv
    headers: Hostname, Ip address, Disk space

  tasks:

    - name: This executes, fails, and the failure is ignored
      ansible.builtin.command: /bin/true

    - name: Check  disk space
      import_tasks: disk_space_check.yaml

    # - name:  Verify web/database processes are not running
    #   shell: if ps -eaf | egrep 'apache|http'|grep -v grep > /dev/null ;then echo 'process_running';else echo 'process_not_running';fi
    #   ignore_errors: true
    #   register: app_process_check

    #- name: search for available updates
    # import_tasks: update.yaml

    - name: Create CSV directory
      ansible.builtin.file:
        path: "{{ csv_path }}"
        state: directory
      delegate_to: localhost

    - name: Build CSV file content
      set_fact:
        csv_content: |
          {% for host in ansible_play_hosts_all %}
          {{ hostvars[host].inventory_hostname }},{{ hostvars[host].ansible_default_ipv4.address }},{{ hostvars[host].disk_remaining_s }}
          {% endfor %}
      delegate_to: localhost


    - name: Save CSV file
      ansible.builtin.copy:
        content: "{{ headers }}\n{{ csv_content }}"
        dest: "{{ csv_path }}/{{ csv_filename }}"
      delegate_to: localhost

    - name: Remove blank lines from CSV file
      lineinfile:
        path: "{{ csv_path }}/{{ csv_filename }}"
        state: absent
        regex: '^\s*$'
      delegate_to: localhost

    - name: Display CSV file path
      debug:
        msg: "CSV file generated: {{ csv_filename }}"

    - name: Read in CSV to variable
      community.general.read_csv:
        path: "{{ csv_path }}/{{ csv_filename }}"
      register: csv_file
      delegate_to: localhost

    - name: debug csv_file
      debug:
        var: csv_file

    - name: Send Email
      community.general.mail:
        host: "localhost"
        from: "root"
        port: 25
        to: "{{ receiver }}"
        subject: "[Ansible] {{ email_subject }}"
        body: "{{ lookup('template', 'report.html.j2') }}"
        attach: "{{ csv_path }}/{{ csv_filename }}"
        subtype: html
      delegate_to: localhost









     
